Чекпоинт-3
Чтобы создать новый объект в Java на основании других объектов – можно применять принципы:

1) НАСЛЕДОВАНИЕ – один объект наследуется от другого
отвечает на вопрос “является” (“is-a”)
пример: авто является транспортом
Используется ключевое слово extends (левый класс – который наследуется (дочерний, child), правый – от которого (родительский, parent)
цепочка наследования должна быть понятна и логична любому, даже стороннему человеку
не рекомендуется создавать больше 4-5 “поколений”
дочерний класс наследует функционал всей цепочки родителей, даже если ему не все нужно
может добавлять свои новые возможности
может переопределять родительские возможности
@Override переопределяет все такие же методы цепочки (если они были)
может использовать super
для вызова родит. конструкторов (super без точки и со скобками) – вызывается конструктор первого родителя
для вызова родит. методов (super с точкой) – вызывается самый первый встреченный в цепочке метод
Конструкторы НЕ НАСЛЕДУЮТСЯ в дочерние классы – их нужно создавать в каждом классе отдельно
Конструктор должен быть связан хотя бы с одним из конструкторов родительского класса
Если мы не вызываем super конструктор, то компилятор сам вызывает super()
super конструктор может быть вызван только из конструктора (вызывается конструктор первого вышестоящего родителя и далее по цепочке вверх)
2) АССОЦИАЦИЯ (агрегация/композиция) – связь двух объектов
отвечает на вопрос “содержит” (“has-a”)
пример: авто состоит из более мелких деталей (содержит их)
агрегация – мягкий вариант, когда внутренний объект может становиться частью любого другого объекта
композиция – более жесткий вариант – внутренний объект не может существовать без внешнего
внешний объект (еще называют “контейнер”) – может включать в себя любые другие внутренние объекты в любом количестве
Если 2 объекта логичней связать способом “содержит” – значит можно применять ассоциацию (композицию или агрегацию).

Если 2 объекта логичней связать способом “является” – значит можно применять наследование.

Ответы