Чекпоинт-5
Проф. подход – сначала создаем абстракцию (интерфейсы и абстрактные классы) – потом реализацию (конкретные классы)
Набор интерфейсов в проекте – это абстрактный уровень приложения, который всегда нужно создавать
Интерфейс – это “фантом” (схема) класса без реализации, из которого затем появляются реальные объекты
Интерфейс по возможности должен включать в себя ссылки на другие интерфейсы, а не конкретные классы
Интерфейс может расширять другой интерфейс по необходимости
@Override также используется при реализации методов интерфейса
Класс обязан реализовать все методы интерфейса
Нельзя создать экземпляр интерфейса
Класс может реализовывать любое количество интерфейсов (в отличие от наследования) через запятую
Вы можете описывать в интерфейсе не только методы-действия, но и методы-свойства
default методы в интерфейсе используются как заглушки (у них сильно ограничен функционал)
Абстрактный класс – это промежуточный вариант между интерфейсом и конкретным классом
Основное назначение абстрактного класса – реализовать часть интерфейса (“разгрузить” конкретные классы), вынести общий код, избежать дублирования кода в дочерних классах
Лучше всю абстракцию полностью выносить только в интерфейсы (легче изучать, сопровождать и писать код)
Абстрактные методы в абстрактном классе желательно не использовать
Абстрактный класс также может иметь конструкторы (в интерфейсе – нет конструкторов, как и свойств)
Нельзя создать экземпляр абстрактного класса
Интерфейс – только поведение

Абстрактный класс – поведение и/или реализация

Конкретный класс – только реализация.